package icrash.environment.operations.actAdministrator.outactAdministrator.oeShowQA {
	import lu.uni.lassy.messir.libraries.primitives
	import lu.uni.lassy.messir.libraries.math
	import lu.uni.lassy.messir.libraries.string
	import lu.uni.lassy.messir.libraries.calendar
	import icrash.concepts.primarytypes.datatypes
	import icrash.concepts.primarytypes.classes
	import icrash.concepts.secondarytypes.datatypes
	import icrash.concepts.secondarytypes.classes
	import icrash.environment

	Operation Model {

		operation: icrash.environment.actAdministrator.outactAdministrator.oeShowQA(AdtCrisisID:dtCrisisID, AdtSurveyID:dtSurveyID, AdtSurveyQuestion:dtSurveyQuestion):ptBoolean {
			preP {
				let TheSystem:ctState in
				let TheActor:actAdministrator in
				self.rnActor.rnSystem = TheSystem and self.rnActor = TheActor and TheSystem.vpStarted = true and TheActor.rnctAuthenticated.vpIsLogged = true

			}
		}

	operation: icrash.environment.actAdministrator.outactAdministrator.oeMonitorOverallQualityInsurence(AdtSurveyQuestion:dtSurveyQuestion):ptBoolean {
		preF {
			let TheSystem:ctState in
			let TheActor:actAdministrator in
			self.rnActor.rnSystem = TheSystem and self.rnActor = TheActor and TheSystem.vpStarted = true and TheActor.rnctAuthenticated.vpIsLogged = true

		}
	}

operation: icrash.environment.actAdministrator.outactAdministrator.oeMonitorQualityInsurenceForCrisis(AdtSurveyQuestion:dtSurveyQuestion, AdtCrisisId:dtCrisisID):ptBoolean {
	preF {
		let TheSystem:ctState in
		let TheActor:actAdministrator in
		self.rnActor.rnSystem = TheSystem and self.rnActor = TheActor and TheSystem.vpStarted = true and TheActor.rnctAuthenticated.vpIsLogged = true

	}
}

}
}
